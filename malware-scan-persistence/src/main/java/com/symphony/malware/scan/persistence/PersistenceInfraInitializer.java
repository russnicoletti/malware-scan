package com.symphony.malware.scan.persistence;

import com.symphony.circuitbreaker.CommandConfig;
import com.symphony.configuration.api.store.IConfigurationStore;
import com.symphony.data.infrastructure.IPersistenceInfra;
import com.symphony.data.infrastructure.LightPersistenceLifecycle;
import com.symphony.healthchecks.indicators.AppsHealthStatus;

import java.io.IOException;
import java.lang.reflect.InvocationTargetException;

/**
 * This class is just a wrapper around {@link LightPersistenceLifecycle#init(String, IConfigurationStore, CommandConfig, AppsHealthStatus, String)}
 * It should be a singleton and it is needed, so we could easily mock {@link LightPersistenceLifecycle} for unit tests
 */
public interface PersistenceInfraInitializer {

  IPersistenceInfra init(
      final String configRootNode, final IConfigurationStore configurationStore, final CommandConfig commandConfig,
      final AppsHealthStatus appsHealthStatus, final String daoImplementationStrategy
  ) throws NoSuchMethodException, IllegalAccessException, InstantiationException, IOException, InvocationTargetException, ClassNotFoundException;
}
