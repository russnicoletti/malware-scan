package com.symphony.malware.scan.persistence;

import com.symphony.circuitbreaker.CommandConfig;
import com.symphony.configuration.api.store.IConfigurationStore;
import com.symphony.data.infrastructure.IPersistenceInfra;
import com.symphony.data.infrastructure.LightPersistenceLifecycle;
import com.symphony.healthchecks.indicators.AppsHealthStatus;

import java.io.IOException;
import java.lang.reflect.InvocationTargetException;

/**
 * Default implementation of {@link PersistenceInfraInitializer}
 */
public class PersistenceInfraInitializerImpl implements PersistenceInfraInitializer {

  @Override
  public IPersistenceInfra init(
      final String configRootNode, final IConfigurationStore configurationStore, final CommandConfig commandConfig,
      final AppsHealthStatus appsHealthStatus, final String daoImplementationStrategy
  ) throws NoSuchMethodException, IllegalAccessException, InstantiationException, IOException, InvocationTargetException, ClassNotFoundException {
    final LightPersistenceLifecycle lightPersistenceLifecycle = new LightPersistenceLifecycle();
    lightPersistenceLifecycle.init(configRootNode, configurationStore, commandConfig, appsHealthStatus, daoImplementationStrategy);

    return lightPersistenceLifecycle.getInfra();
  }

}
