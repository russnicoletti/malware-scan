package com.symphony.malware.scan.connector.config;

import static com.symphony.malware.scan.connector.config.MalwareScanContainerConnectorConfigProvider.ConnectionRequestType;

import com.symphony.container.connector.config.provider.NonCircuitBreakingContainerConnectorConfigProvider;

import java.util.Arrays;
import java.util.List;

public class MalwareScanContainerConnectorConfigProvider
    extends NonCircuitBreakingContainerConnectorConfigProvider<ConnectionRequestType, MalwareScanContainerConnectorConfigEntity, MalwareScanContainerConnectorConfig> {

  public MalwareScanContainerConnectorConfigProvider(
      final long configCacheReloadInMillis,
      final MalwareScanContainerConnectorConfigRepository malwareScanContainerConnectorConfigRepository
  ) {
    super(configCacheReloadInMillis, malwareScanContainerConnectorConfigRepository);
  }

  @Override
  public MalwareScanContainerConnectorConfig toContainerConnectorConfig(
      final MalwareScanContainerConnectorConfigEntity malwareScanContainerConnectorConfigEntity,
      final String tenantId
  ) {
    return new MalwareScanContainerConnectorConfig(malwareScanContainerConnectorConfigEntity);
  }

  @Override
  public MalwareScanContainerConnectorConfig getDefaultContainerConnectorConfig(final ConnectionRequestType connectionRequestType,  final String tenantId) {
    return new MalwareScanContainerConnectorConfig(connectionRequestType, DEFAULT_SERVICE_CALL_TIMEOUT);
  }

  @Override
  public List<ConnectionRequestType> getConnectionRequestTypes() {
    return Arrays.asList(ConnectionRequestType.values());
  }

  public enum ConnectionRequestType {
    MALWARE_SCAN
  }
}
