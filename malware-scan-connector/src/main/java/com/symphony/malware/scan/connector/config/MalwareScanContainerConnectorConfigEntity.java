package com.symphony.malware.scan.connector.config;

import static com.symphony.malware.scan.connector.config.MalwareScanContainerConnectorConfigProvider.ConnectionRequestType;

import com.symphony.container.connector.config.entity.NonCircuitBreakingContainerConnectorConfigEntity;

import com.fasterxml.jackson.annotation.JsonIgnore;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;

/**
 * Malware scan container connector configuration entity
 */
@Entity
@Document(collection = "malwarescan_connectorconfig")
public class MalwareScanContainerConnectorConfigEntity implements NonCircuitBreakingContainerConnectorConfigEntity<ConnectionRequestType> {

  @Id
  @JsonIgnore
  private String id;

  @Enumerated(EnumType.STRING)
  private ConnectionRequestType connectionRequestType;

  private int serviceCallTimeoutInMillis;

  @Override
  public String getId() {
    return id;
  }

  public MalwareScanContainerConnectorConfigEntity setId(final String id) {
    this.id = id;
    return this;
  }

  @Override
  public ConnectionRequestType getConnectionRequestType() {
    return connectionRequestType;
  }

  public MalwareScanContainerConnectorConfigEntity setConnectionRequestType(final ConnectionRequestType connectionRequestType) {
    this.connectionRequestType = connectionRequestType;
    return this;
  }

  @Override
  public int getServiceCallTimeoutInMillis() {
    return serviceCallTimeoutInMillis;
  }

  public MalwareScanContainerConnectorConfigEntity setServiceCallTimeoutInMillis(int serviceCallTimeoutInMillis) {
    this.serviceCallTimeoutInMillis = serviceCallTimeoutInMillis;
    return this;
  }
}
