package com.symphony.malware.scan.converter;

import com.symphony.malware.scan.MalwareScanResponse;
import com.symphony.malware.scan.Status;
import com.symphony.malware.scan.model.MalwareScanResponseDto;

import com.google.common.collect.ImmutableMap;

import java.util.Map;
import java.util.Optional;

public class MalwareScanResponseProtoDtoConverter implements ProtoDtoConverter<MalwareScanResponse, MalwareScanResponseDto> {

    /**
     * Mapping of statuses returned from Symproxy to SBE recognizable statuses
     */
    private static final Map<Status, MalwareScanResponseDto.Status> TO_DTO_STATUS_MAPPING = ImmutableMap.of(
        Status.OK, MalwareScanResponseDto.Status.PROCESSED,
        Status.FAILED, MalwareScanResponseDto.Status.FAILED_SEND_REQUEST,
        Status.RETRY_FAILED, MalwareScanResponseDto.Status.FAILED_SEND_REQUEST
    );

    /**
     * Mapping of SBE recognizable statuses to statuses returned from Symproxy
     */
    private static final Map<MalwareScanResponseDto.Status, Status> TO_PROTO_STATUS_MAPPING = ImmutableMap.of(
        MalwareScanResponseDto.Status.FAILED_VALIDATION, Status.FAILED,
        MalwareScanResponseDto.Status.FAILED_CREATE_STATE, Status.FAILED,
        MalwareScanResponseDto.Status.FAILED_SEND_REQUEST, Status.FAILED,
        MalwareScanResponseDto.Status.FAILED_UPDATE_STATE, Status.FAILED,
        MalwareScanResponseDto.Status.PROCESSED, Status.OK
    );

    @Override
    public MalwareScanResponseDto toDto(final MalwareScanResponse malwareScanResponse) {
        return Optional.ofNullable(malwareScanResponse)
            .map(msr -> MalwareScanResponseDto.builder()
                .status(TO_DTO_STATUS_MAPPING.get(msr.getStatus()))
                .error(msr.getError())
                .build())
            .orElse(null);
    }

    @Override
    public MalwareScanResponse toProto(final MalwareScanResponseDto malwareScanResponseDto) {
        return Optional.ofNullable(malwareScanResponseDto)
            .map(msrd -> MalwareScanResponse.newBuilder()
                .setStatus(TO_PROTO_STATUS_MAPPING.get(malwareScanResponseDto.getStatus()))
                .setError(malwareScanResponseDto.getError())
                .build())
            .orElse(null);
    }

}
