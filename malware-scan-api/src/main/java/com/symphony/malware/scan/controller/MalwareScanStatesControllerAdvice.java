package com.symphony.malware.scan.controller;

import com.symphony.exceptions.service.ForbiddenRequestException;
import com.symphony.malware.scan.exception.MalwareScanFileNotFoundException;
import com.symphony.webcommons.rest.ErrorResponse;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;

/**
 * Advice for handling exceptions of malware scan states controller
 *
 * @author anton.g
 */
@Slf4j
@ControllerAdvice(assignableTypes = MalwareScanStatesController.class)
public class MalwareScanStatesControllerAdvice {

   @ExceptionHandler(MalwareScanFileNotFoundException.class)
   public ResponseEntity<ErrorResponse> handleMalwareScanFileNotFoundException(MalwareScanFileNotFoundException e) {
      return createErrorResponseEntity(e, "Malware scan states history not found for file " + e.getFileId(), HttpStatus.NOT_FOUND);
   }

   @ExceptionHandler(ForbiddenRequestException.class)
   public ResponseEntity<ErrorResponse> handleForbiddenRequestException(ForbiddenRequestException e) {
      return createErrorResponseEntity(e, "Not entitled to access resource: endpoint entitlement check failed", HttpStatus.FORBIDDEN);
   }

   @ExceptionHandler(Exception.class)
   public ResponseEntity<ErrorResponse> handleDefaultException(Exception e) {
      return createErrorResponseEntity(e, HttpStatus.INTERNAL_SERVER_ERROR);
   }

   private ResponseEntity<ErrorResponse> createErrorResponseEntity(Exception e, String errorMsg, HttpStatus status) {
      LOGGER.error(errorMsg, e);
      return new ResponseEntity<>(new ErrorResponse(errorMsg), status);
   }

   private ResponseEntity<ErrorResponse> createErrorResponseEntity(Exception e, HttpStatus status) {
      return createErrorResponseEntity(e, e.getLocalizedMessage(), status);
   }

}
