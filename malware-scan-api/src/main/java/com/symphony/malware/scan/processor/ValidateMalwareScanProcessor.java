package com.symphony.malware.scan.processor;

import com.symphony.malware.scan.model.MalwareScanRequestDto;
import com.symphony.malware.scan.model.MalwareScanResponseDto;
import com.symphony.malware.scan.service.MalwareScanValidationService;

import lombok.extern.slf4j.Slf4j;

/**
 * Validates malware scan request
 */
@Slf4j
public class ValidateMalwareScanProcessor extends MalwareScanProcessor {

    private final MalwareScanValidationService malwareScanValidationService;

    public ValidateMalwareScanProcessor(
        final MalwareScanValidationService malwareScanValidationService

    ) {
        this.malwareScanValidationService = malwareScanValidationService;
    }

    @Override
    public MalwareScanResponseDto process(final MalwareScanRequestDto malwareScanRequestDto) {
        final MalwareScanResponseDto malwareScanResponseDto = malwareScanValidationService.validate(malwareScanRequestDto)
            .toBuilder().malwareScanRequestDto(malwareScanRequestDto).build();

        if (MalwareScanResponseDto.Status.PROCESSED.equals(malwareScanResponseDto.getStatus())) {
            return getNext(malwareScanResponseDto).process(malwareScanRequestDto);
        } else {
            LOGGER.error("Error encountered while validating malware scan request {}", malwareScanRequestDto);
            return malwareScanResponseDto;
        }
    }

}
