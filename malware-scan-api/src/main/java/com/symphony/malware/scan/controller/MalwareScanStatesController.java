package com.symphony.malware.scan.controller;

import com.symphony.data.common.roles.entitlableactions.EntitleableActionID;
import com.symphony.malware.scan.exception.MalwareScanFileNotFoundException;
import com.symphony.malware.scan.service.EntitleableActionIdAuthorizer;
import com.symphony.malware.scan.service.MalwareScanStateService;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletRequest;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.nio.charset.StandardCharsets;

/**
 * Rest controller for malware scan states endpoints
 *
 * @author anton.g
 */
@Slf4j
@RestController
public class MalwareScanStatesController {

   private final MalwareScanStateService scanStateService;
   private final EntitleableActionIdAuthorizer authorizer;

   public MalwareScanStatesController(MalwareScanStateService scanStateService, EntitleableActionIdAuthorizer authorizer) {
      this.scanStateService = scanStateService;
      this.authorizer = authorizer;
   }

   /**
    * Retrieves history of a malware scan statuses of a file
    *
    * @param fileId id of a file for which malware scan statuses history to be retrieved
    * @return history of malware scan statuses of a file
    */
   @GetMapping(value = "/api/v1/attachments/malware-scan/states/history/{fileId}", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
   @ResponseBody
   public ResponseEntity getMalwareAttachmentStateHistory(@PathVariable String fileId, HttpServletRequest request) throws UnsupportedEncodingException, MalwareScanFileNotFoundException {
      authorizer.authorize(request, EntitleableActionID.MANAGE_EXPRESSION_FILTERS);

      return ResponseEntity.ok(
              scanStateService.getMalwareAttachmentStatesHistory(URLDecoder.decode(fileId, StandardCharsets.UTF_8.name()))
      );
   }

}
