package com.symphony.malware.scan.converter;

import com.symphony.malware.scan.AttachmentData;
import com.symphony.malware.scan.MalwareScanRequest;
import com.symphony.malware.scan.model.AttachmentMetaDto;
import com.symphony.malware.scan.model.MalwareScanRequestDto;

import java.util.Optional;

public class MalwareScanRequestProtoDtoConverter implements ProtoDtoConverter<MalwareScanRequest, MalwareScanRequestDto> {

    private final ProtoDtoConverter<AttachmentData.AttachmentMeta, AttachmentMetaDto> attachmentMetaProtoDtoConverter;

    public MalwareScanRequestProtoDtoConverter(
        final ProtoDtoConverter<AttachmentData.AttachmentMeta, AttachmentMetaDto> attachmentMetaProtoDtoConverter
    ) {
        this.attachmentMetaProtoDtoConverter = attachmentMetaProtoDtoConverter;
    }

    /**
     * Does not convert attachment metadata
     * @param malwareScanRequest
     * @return
     */
    @Override
    public MalwareScanRequestDto toDto(final MalwareScanRequest malwareScanRequest) {
        return Optional.ofNullable(malwareScanRequest)
            .map(msr -> MalwareScanRequestDto.builder()
                .creationTime(msr.getCreationTime())
                .attachmentMetaDto(Optional.ofNullable(msr.getAttachmentMeta()).map(attachmentMetaProtoDtoConverter::toDto).orElse(null))
                .build()
            ).orElse(null);
    }

    /**
     * Does not convert attachment metadata
     * @param malwareScanRequestDto
     * @return
     */
    @Override
    public MalwareScanRequest toProto(final MalwareScanRequestDto malwareScanRequestDto) {
        return Optional.ofNullable(malwareScanRequestDto)
            .map(msrd -> MalwareScanRequest.newBuilder()
                .setCreationTime(msrd.getCreationTime())
                .setAttachmentMeta(attachmentMetaProtoDtoConverter.toProto(malwareScanRequestDto.getAttachmentMetaDto()))
                .build()
            ).orElse(null);
    }

}
