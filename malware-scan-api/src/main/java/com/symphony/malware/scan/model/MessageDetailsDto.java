package com.symphony.malware.scan.model;

import java.util.Objects;

/**
 * DTO containing details on a message where a file which
 * was submitted for malware scanning appeared
 *
 * @author anton.g
 */
public class MessageDetailsDto {

   /**
    * Id of a stream where a message with malware-scanned file was sent
    */
   private final String streamId;

   /**
    * Name of a stream where a message with malware-scanned file was sent
    */
   private final String streamName;

   /**
    * Type of a stream where a message with malware-scanned file was sent
    */
   private final String streamType;

   /**
    * Id of a message which contained malware-scanned file
    */
   private final String messageId;

   /**
    * Email of a sender of a message
    */
   private final String sender;

   /**
    * Size of the file in bytes
    */
   private final Long fileSize;

   public MessageDetailsDto(String streamId, String streamName, String streamType, String messageId, String sender, Long fileSize) {
      this.streamId = streamId;
      this.streamName = streamName;
      this.streamType = streamType;
      this.messageId = messageId;
      this.sender = sender;
      this.fileSize = fileSize;
   }

   public String getStreamId() {
      return streamId;
   }

   public String getStreamName() {
      return streamName;
   }

   public String getStreamType() {
      return streamType;
   }

   public String getMessageId() {
      return messageId;
   }

   public String getSender() {
      return sender;
   }

   public Long getFileSize() {
      return fileSize;
   }

   @Override
   public boolean equals(Object o) {
      if (this == o) return true;
      if (o == null || getClass() != o.getClass()) return false;
      MessageDetailsDto that = (MessageDetailsDto) o;
      return Objects.equals(streamId, that.streamId) &&
              Objects.equals(streamName, that.streamName) &&
              Objects.equals(streamType, that.streamType) &&
              Objects.equals(messageId, that.messageId) &&
              Objects.equals(sender, that.sender) &&
              Objects.equals(fileSize, that.fileSize);
   }

   @Override
   public int hashCode() {
      return Objects.hash(streamId, streamName, streamType, messageId, sender, fileSize);
   }

}
