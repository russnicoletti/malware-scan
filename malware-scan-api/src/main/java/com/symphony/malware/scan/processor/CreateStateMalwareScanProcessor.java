package com.symphony.malware.scan.processor;

import com.symphony.malware.scan.Status;
import com.symphony.malware.scan.model.Actor;
import com.symphony.malware.scan.model.MalwareScanFileState;
import com.symphony.malware.scan.model.MalwareScanRequestDto;
import com.symphony.malware.scan.model.MalwareScanResponseDto;
import com.symphony.malware.scan.service.MalwareScanOperationPersistenceService;

import lombok.extern.slf4j.Slf4j;

@Slf4j
public class CreateStateMalwareScanProcessor extends MalwareScanProcessor {

    private final MalwareScanOperationPersistenceService malwareScanOperationPersistenceService;

    public CreateStateMalwareScanProcessor(
        final MalwareScanOperationPersistenceService malwareScanOperationPersistenceService

    ) {
        this.malwareScanOperationPersistenceService = malwareScanOperationPersistenceService;
    }

    @Override
    public MalwareScanResponseDto process(final MalwareScanRequestDto malwareScanRequestDto) {
        final MalwareScanResponseDto malwareScanResponseDto = malwareScanOperationPersistenceService
            .create(malwareScanRequestDto, MalwareScanFileState.Status.PENDING, Actor.SYMPHONY)
            .toBuilder().malwareScanRequestDto(malwareScanRequestDto).build();

        if (Status.OK.equals(malwareScanResponseDto.getStatus())) {
            return getNext(malwareScanResponseDto).process(malwareScanRequestDto);
        } else {
            LOGGER.error("Error encountered while persisting malware scan request {}", malwareScanResponseDto);
            // TODO Throw here an exception, but make sure it is handled in SBE and message is replayed
            // TODO Should be done in sope of https://perzoinc.atlassian.net/browse/DLP-4406
            return malwareScanResponseDto;
        }
    }

}
