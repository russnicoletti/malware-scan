package com.symphony.malware.scan.converter;

import static org.assertj.core.api.Assertions.assertThat;

import com.symphony.malware.scan.AttachmentData;
import com.symphony.malware.scan.model.AttachmentMetaDto;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.runners.MockitoJUnitRunner;

@RunWith(MockitoJUnitRunner.class)
public class AttachmentMetaProtoDtoConverterTest {

    private static final String NAME = "name";
    private static final String FILE_ID = "fileId";
    private static final String CONTENT_TYPE = "contentType";
    private static final Long CREATOR_ID = 17L;
    private static final Long SIZE_IN_BYTES = 21L;

    private AttachmentMetaProtoDtoConverter attachmentMetaConverter;

    @Before
    public void before() {
        this.attachmentMetaConverter = new AttachmentMetaProtoDtoConverter();
    }

    @Test
    public void toDto_protoIsNotNull_converted() {
        final AttachmentData.AttachmentMeta attachmentMeta = AttachmentData.AttachmentMeta.newBuilder()
            .setName(NAME).setFileId(FILE_ID).setContentType(CONTENT_TYPE)
            .setCreatorId(CREATOR_ID).setSizeInBytes(SIZE_IN_BYTES).build();

        final AttachmentMetaDto attachmentMetaDto = attachmentMetaConverter.toDto(attachmentMeta);

        assertThat(attachmentMetaDto.getName()).isEqualTo(NAME);
        assertThat(attachmentMetaDto.getFileId()).isEqualTo(FILE_ID);
        assertThat(attachmentMetaDto.getContentType()).isEqualTo(CONTENT_TYPE);
        assertThat(attachmentMetaDto.getCreatorId()).isEqualTo(CREATOR_ID);
        assertThat(attachmentMetaDto.getSizeInBytes()).isEqualTo(SIZE_IN_BYTES);
    }

    @Test
    public void toDto_protoIsNull_null() {
        assertThat(attachmentMetaConverter.toDto(null)).isNull();
    }


    @Test
    public void toProto_dtoIsNotNull_converted() {
        final AttachmentMetaDto attachmentMetaDto = AttachmentMetaDto.builder()
            .name(NAME).fileId(FILE_ID).contentType(CONTENT_TYPE)
            .creatorId(CREATOR_ID).sizeInBytes(SIZE_IN_BYTES).build();

        final AttachmentData.AttachmentMeta attachmentMeta = attachmentMetaConverter.toProto(attachmentMetaDto);

        assertThat(attachmentMeta.getName()).isEqualTo(NAME);
        assertThat(attachmentMeta.getFileId()).isEqualTo(FILE_ID);
        assertThat(attachmentMeta.getContentType()).isEqualTo(CONTENT_TYPE);
        assertThat(attachmentMeta.getCreatorId()).isEqualTo(CREATOR_ID);
        assertThat(attachmentMeta.getSizeInBytes()).isEqualTo(SIZE_IN_BYTES);
    }

    @Test
    public void toProto_dtoIsNull_converted() {
        assertThat(attachmentMetaConverter.toProto(null)).isNull();
    }

}
