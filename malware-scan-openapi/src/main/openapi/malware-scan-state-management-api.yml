openapi: 3.0.0
info:
  version: V1
  title: Malware/AV Attachment scanning APIs
  contact:
    email: vishnu.narayana@symphony.com
  license:
    name: Symphony
  description: >
    #### Description:
    This document outlines the API for the Malware Attachment scanning provided by Symphony.
paths:
  /api/v1/attachments/malware-scan/states/history:
    get:
      tags:
        - Malware-scanning
      summary: Retrieves history of malware scan statuses of a file
      description: Retrieves history of malware scan statuses of a file
      operationId: get-file-malware-status-history-_-no-states-history-found
      parameters:
        - name: fileId
          in: query
          description: Id of the file for which malware scan history will be retrieved
          required: true
          schema:
            type: string
        - in: header
          name: sessionToken
          description: Session token obtained from Session Authenticate endpoint.
          required: true
          schema:
            type: string
        - in: header
          name: x-symphony-csrf-token
          description: CSRF token obtained from Session Authenticate endpoint.
          required: true
          schema:
            type: string
      responses:
        404:
          description: "404"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                get-file-malware-status-history-_-no-states-history-found:
                  value: |-
                    {
                      "message" : "d13bb9eb-9fb5-4e29-b6bb-075e713c0063"
                    }
        200:
          description: "OK response with malware scan states history in response body"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalwareScanStatesHistory'
              examples:
                get-file-malware-status-history:
                  value: |-
                    {
                      "fileInfo" : {
                        "fileName" : "84752016-af78-477a-b533-e94473f1785a",
                        "fileId" : "1",
                        "fileSize" : 123
                      },
                      "scanStates" : [ {
                        "scanningState" : "OK",
                        "timestamp" : 1565258984864,
                        "source" : "Symphony"
                      }, {
                        "scanningState" : "BAD",
                        "timestamp" : 1565258984866,
                        "source" : "Customer"
                      } ],
                      "conversationDetails" : [ {
                        "streamId" : "53da2500-e6cd-47a7-b3b4-03653b508bc0",
                        "streamName" : "ec20774c-d783-4afe-b781-368b0c2b47ec",
                        "streamType" : "72c13a9e-19ef-4c7e-9128-9c8873b5ac66",
                        "messageId" : "76220def-977a-48d2-8308-9a4e8f33b852",
                        "sender" : "test@mail.com"
                      }, {
                        "streamId" : "674d269e-7d51-4d27-9e72-061284879470",
                        "streamName" : "5461d296-e4a6-4b4e-82a1-57381985f156",
                        "streamType" : "5474b320-eb20-4f47-91cc-cb4f1ffa638f",
                        "messageId" : "fe5aa083-f57f-40b3-8acf-8ca92d8badde",
                        "sender" : "another-test@mail.com"
                      } ]
                    }
        500:
          description: "Unexpected internal server error occurred"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                get-file-malware-status-history-_-unexpected-error:
                  value: |-
                    {
                      "message" : "87b84ebb-c910-48c9-8bb8-63bcdb16e419"
                    }
        403:
          description: "Caller is not entitled to access this resource"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                get-file-malware-status-history-_-entitlement-check-error:
                  value: |-
                    {
                      "message" : "Not entitled to access resource: endpoint entitlement check failed"
                    }
  "/api/v1/attachments/malware-scan/state":
    parameters:
      - in: query
        name: fileId
        schema:
          type: string
        required: true
        description: File ID of the scanned attachment.
      - in: header
        name: sessionToken
        description: Session token obtained from Session Authenticate endpoint.
        required: true
        schema:
          type: string
      - in: header
        name: x-symphony-csrf-token
        description: CSRF token obtained from Session Authenticate endpoint.
        required: true
        schema:
          type: string
    get:
      summary: Gets the scanning state of the attachment for the given fileId.
      description: >
        #### Description:
        "Gets the scanning state of the attachment, possible values: Pending, Ok, Bad, Unscannable, Expired etc."
      tags:
        - Malware-scanning
      responses:
        "200":
          description: OK response with the current state of attachment scanning.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MalwareScanningState"
        "400":
          description: The file Id does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: User not allowed to perform the action
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      summary: Updates the scanning state of the attachment after scanning process is
        complete for the given fileId.
      description: >
        #### Description:
        "Updates the scanning state of the attachment, allowed values: Ok, Bad, Unscannable, Expired."
      tags:
        - Malware-scanning
      parameters:
        - in: header
          name: X-Trace-Id
          description: TraceId received in MalwareScanningRequest should be send back in this header.
            Used for debugging purposes.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MalwareScanningState"
      responses:
        "204":
          description: Updated successfully.
        "400":
          description: The file Id does not exist or invalid value for the scanning state.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: User not allowed to perform the action
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
servers:
  - url: https:///attachment/v4/
components:
  schemas:
    MalwareScanStatesHistory:
      type: object
      properties:
        conversationDetails:
          type: array
          description: Details on a conversation where this file appeared
          items:
            type: object
            properties:
              streamType:
                type: string
                description: Type of the stream where this file appeared
              streamId:
                type: string
                description: Id of the stream where this file appeared
              sender:
                type: string
                description: Email of a user sent this message
              messageId:
                type: string
                description: Id of the message which contains this file
              streamName:
                type: string
                description: Name of the stream where this file appeared
        scanStates:
          type: array
          description: History of malware states of a file
          items:
            type: object
            properties:
              scanningState:
                type: string
                description: Malware scan state value
              source:
                type: string
                description: Source of the status. Either Symproxy or Customer
              timestamp:
                type: number
                description: Timestamp which denotes when this status was received
                  from malware scanner
        fileInfo:
          type: object
          properties:
            fileName:
              type: string
              description: Name of the file
            fileSize:
              type: number
              description: Size of the file in bytes
            fileId:
              type: string
              description: Id of the file
          description: Metadata of a file
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Error message.
          example: Error message
    Link:
      type: object
      description: Link to the scanning details.
      properties:
        text:
          type: string
          description: Text of the link in details message.
        url:
          type: string
          description: URL of the scanning details.
    MalwareScanningStateDetails:
      type: object
      description: Contains the details of the scanning in case of BAD state.
      properties:
        message:
          type: string
          description: Details of scanning.
        link:
          $ref: "#/components/schemas/Link"
    MalwareScanningState:
      type: object
      properties:
        status:
          type: string
          enum:
            - OK
            - BAD
            - UNSCANNABLE
            - EXPIRED
          description: Contains the result of scanning and some additional information.
        ttl:
          type: integer
          description: TTL timestamp in epoch seconds. After that point in time file shall be rescanned in case of download attempt.
        details:
          $ref: "#/components/schemas/MalwareScanningStateDetails"
